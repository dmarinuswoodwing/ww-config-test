{"version":3,"sources":["App.js","Componants/AssetSelected/AssetSelected.js","Componants/FolderSelected/FolderSelected.js","Componants/Progress/Progress.js","Componants/Error/Error.js","Images/spinner.svg","Componants/Working/Working.js","index.js","Helpers/elvis.js"],"names":["App","props","state","page","errorCode","this","assetCount","window","elvisContext","activeTab","assetSelection","length","folderCount","folderSelection","filter","f","name","depth","assetPath","split","close","setState","assets","console","log","plugin","configProperties","global_delete_own_material_only","value","userGroups","app","userProfile","groups","groupsToMatch","JSON","parse","global_groups_allow_delete_non_own","some","item","includes","assetImporters","map","x","metadata","assetCreator","undefined","setTimeout","find","e","username","error","data","payload","currentPage","meta","user","date","Date","encrypted","encode","stringify","ids","asset","id","path","key","index","iv","content","global_groups_allow_folder_delete","grpMatch","preventFolderDelete","folder","type","folderDeleteType","ElvisDriver","sendInfo","then","res","status","catch","err","response","text","secretKey","crypto","randomBytes","cipher","createCipheriv","Buffer","concat","update","final","toString","onSave","bind","toFolderDeleteScreen","toAssetDeleteScreen","Component","AssetsSelected","messages","highlightBackgroundColour","highlight_background_colour","highlightTextColour","highlight_text_colour","selectedAssetCount","selectedFolderCount","confirmed","open","location","protocol","host","trashcan_plugin_url","disabled","class","replace","className","checked","onChange","onConfirmCheckboxChange","for","onClick","toFolders","gotoRecovery","onCancel","style","backgroundColor","border","color","href","target","rel","alt","deleteType","onRadioSelectChange","toAssets","Process","height","src","Spinner","parent","getElvisContext","init","api","ReactDOM","render","StrictMode","document","getElementById","alert","require","pluginSettings","serverUrl","resolvedLogin","_getFolderPath","_retrieveToken","fetch","credentials","json","apiServerUrl","csrfToken","loginParam","withCookie","folderPath","client","Elvis","createClient","login","waitForLogin","func","Promise","resolve","search","query","sendInfo2","request","Request","method","body","headers","Headers","getHeadersWithDefaults","headerEncrypted","server_url","password","detailsEncrypted","config","api_key","trashpath","Axios","post"],"mappings":"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","file":"static/js/main.35056087.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport crypto from 'crypto'\n\nimport AssetSelectedPage from './Componants/AssetSelected/AssetSelected'\nimport FolderSelectedPage from './Componants/FolderSelected/FolderSelected'\nimport ProcessScreen from './Componants/Progress/Progress'\nimport Error from './Componants/Error/Error'\nimport Working from './Componants/Working/Working'\n\nimport ElvisDriver from './Helpers/elvis'\n\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      page: 1,\n      errorCode: 0\n    }\n  }\n\n  componentDidMount() {\n    try {\n      this.assetCount = window.elvisContext.activeTab.assetSelection.length\n      this.folderCount = window.elvisContext.activeTab.folderSelection.filter(f => { return f.name !== '/' }).length\n      this.depth = window.elvisContext.activeTab.folderSelection[0].assetPath.split('/').length - 1\n\n      let split = window.elvisContext.activeTab.folderSelection[0].assetPath.split('/')\n      if (this.depth < 2 && this.assetCount === 0) {\n        window.elvisContext.close()\n      }\n\n\n\n\n      if (this.assetCount > 0) {\n        this.setState({ page: 1 })\n      } else if (this.folderCount > 0) {\n        this.setState({ page: 2 })\n      } else {\n        window.elvisContext.close()\n      }\n      const assets = window.elvisContext.activeTab.assetSelection\n      console.log(assets)\n      if (window.elvisContext.plugin.configProperties.global_delete_own_material_only.value && assets.length > 0) {\n        const userGroups = window.elvisContext.app.userProfile.groups\n\n        const groupsToMatch = JSON.parse(window.elvisContext.plugin.configProperties.global_groups_allow_delete_non_own.value)\n\n\n        if (userGroups.some(item => groupsToMatch.includes(item))) {\n\n        } else {\n          const assetImporters = assets.map(x => x.metadata.assetCreator)\n\n          //check to see the user can see assetCreator metadata\n          if (assets[0].metadata.assetCreator === undefined) {\n            setTimeout(() => {\n              this.setState({ page: 4, errorCode: 4 })\n            }, 0)\n            return\n          }\n\n          const assetimportCheck = assetImporters.find(e => e != window.elvisContext.app.userProfile.username)\n          if (assetimportCheck) {\n            setTimeout(() => {\n              this.setState({ page: 4, errorCode: 3 })\n            }, 0)\n            return\n          }\n        }\n\n      }\n\n    } catch (error) {\n      console.log(error)\n      window.elvisContext.close()\n    }\n  }\n\n  onSave(data) {\n    const { page } = this.state\n    let currentPage = page\n    this.setState({ page: 5 })\n    let payload\n    let meta = {\n      user: window.elvisContext.app.userProfile.username,\n      date: new Date()\n    }\n    if (currentPage === 1) {\n\n      const assets = window.elvisContext.activeTab.assetSelection\n\n      let encrypted = this.encode(JSON.stringify({ ids: assets.map(asset => { return { id: asset.id, path: asset.assetPath } }), metadata: meta }), window.elvisContext.plugin.configProperties.key.value)\n      payload = {\n        index: encrypted.iv,\n        data: encrypted.content\n      }\n    } else if (currentPage === 2) {\n      const userGroups = window.elvisContext.app.userProfile.groups\n\n      const groupsToMatch = JSON.parse(window.elvisContext.plugin.configProperties.global_groups_allow_folder_delete.value)\n      const grpMatch = userGroups.some(item => groupsToMatch.includes(item))\n\n      if (window.elvisContext.plugin.configProperties.preventFolderDelete.value && !grpMatch) {\n        setTimeout(() => {\n          this.setState({ page: 4, errorCode: 5 })\n        }, 500)\n        return\n      }\n\n      const folder = window.elvisContext.activeTab.folderSelection[0].assetPath\n      let encrypted = this.encode(JSON.stringify({ folder: folder, type: data.folderDeleteType, metadata: meta }), window.elvisContext.plugin.configProperties.key.value)\n      payload = {\n        index: encrypted.iv,\n        data: encrypted.content\n      }\n    }\n\n    ElvisDriver.sendInfo(payload)\n      .then(res => {\n        let status = res.status\n        if (status === 200) {\n          setTimeout(() => {\n            this.setState({ page: 3 })\n          }, 500)\n        } else {\n          setTimeout(() => {\n            this.setState({ page: 4, errorCode: 0 })\n          }, 500)\n        }\n      })\n      .catch(err => {\n        if (err.response) {\n          let status = err.response.status\n          if (status === 400) {\n            setTimeout(() => {\n              this.setState({ page: 4, errorCode: 1 })\n            }, 500)\n          } else {\n            setTimeout(() => {\n              this.setState({ page: 4, errorCode: 0 })\n            }, 500)\n          }\n        } else {\n          setTimeout(() => {\n            this.setState({ page: 4, errorCode: 0 })\n          }, 500)\n        }\n\n      })\n  }\n\n  toAssetDeleteScreen() {\n    this.setState({ page: 1 })\n  }\n\n  toFolderDeleteScreen() {\n    this.setState({ page: 2 })\n  }\n\n  encode(text, secretKey) {\n    const iv = crypto.randomBytes(16)\n    const algorithm = 'aes-256-ctr'\n    const cipher = crypto.createCipheriv(algorithm, secretKey, iv)\n    const encrypted = Buffer.concat([cipher.update(text), cipher.final()])\n    return {\n      iv: iv.toString('hex'),\n      content: encrypted.toString('hex')\n    };\n  }\n\n  render() {\n    const { page, errorCode } = this.state\n    const assetCount = window.elvisContext.activeTab.assetSelection.length\n    const folderCount = window.elvisContext.activeTab.folderSelection.filter(f => { return f.name !== '/' }).length\n    return (\n      <>\n        {page === 1 ?\n          <AssetSelectedPage\n            depth={this.depth}\n            assetCount={assetCount}\n            folderCount={folderCount}\n            onSave={this.onSave.bind(this)}\n            toFolderDeleteScreen={this.toFolderDeleteScreen.bind(this)}\n          />\n          : null}\n        {page === 2 ?\n          <FolderSelectedPage\n            assetCount={assetCount}\n            folderCount={folderCount}\n            onSave={this.onSave.bind(this)}\n            toAssetDeleteScreen={this.toAssetDeleteScreen.bind(this)}\n          />\n          : null}\n        {page === 3 ?\n          <ProcessScreen />\n          : null}\n        {page === 4 ?\n          <Error error={errorCode} />\n          : null}\n        {page === 5 ?\n          <Working />\n          : null}\n      </>\n    );\n  }\n}\n\nexport default App;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AssetsSelected extends Component {\n  constructor(props) {\n    super(props);\n\n\n    this.text = window.elvisContext.plugin.messages\n    this.highlightBackgroundColour = window.elvisContext.plugin.configProperties.highlight_background_colour.value\n    this.highlightTextColour = window.elvisContext.plugin.configProperties.highlight_text_colour.value\n\n\n    this.state = {\n      selectedAssetCount: props.assetCount,\n      selectedFolderCount: props.folderCount,\n      confirmed: false,\n    }\n  }\n\n\n  onConfirmCheckboxChange() {\n    this.setState({ confirmed: !this.state.confirmed })\n  }\n\n  onCancel() {\n    window.elvisContext.close()\n  }\n\n\n  onSave() {\n    this.props.onSave({ confirmed: this.state.confirmed })\n  }\n\n  toFolders() {\n    this.props.toFolderDeleteScreen()\n  }\n\n  gotoRecovery() {\n    window.open(`${window.location.protocol}//${window.location.host}/app/#${window.elvisContext.plugin.configProperties.trashcan_plugin_url.value}`)\n  }\n\n  render() {\n    const {\n      selectedAssetCount,\n      selectedFolderCount,\n      confirmed\n    } = this.state\n\n    let disabled = !confirmed\n\n    return (\n      <div class=\"state-block state-files\">{/*<!-- start point if files are selected go here first -->*/}\n        <form class=\"delete-form\">\n          <div class=\"delete-panel\">\n            <div class=\"delete-main\">\n              <h3>{this.text['asset_header'].replace('{count}', selectedAssetCount)}</h3>\n              <input className='pointer' type=\"checkbox\" id=\"confirm-delete\" name=\"delete-mode\" value=\"Confirm\" checked={confirmed} onChange={this.onConfirmCheckboxChange.bind(this)} />\n              <label className='pointer' for=\"confirm-delete\">{this.text['asset_message1']}</label><br />\n              <div id=\"info\" class=\"delete-info\">{this.text['asset_message2']}<br />{this.text['asset_message3']}</div>\n            </div>\n            <div class=\"delete-advanced\">\n              {selectedFolderCount > 0 && this.props.depth > 1 ?\n                <div class=\"advanced-link\" onClick={this.toFolders.bind(this)}>\n                  {this.text['asset_message4']}\n                </div>\n                : null}\n              <div class=\"advanced-link\" onClick={this.gotoRecovery.bind(this)}>\n                {this.text['recovery_message']}\n              </div>\n            </div>\n            <div class=\"delete-buttons\">\n              <button type=\"button\" class=\"cancel-btn basic-btn ml10 pale\" onClick={this.onCancel}>{this.text['button_cancel']}</button>\n              {!disabled ?\n                <button type=\"button\" class={`start-btn basic-btn ml10`} style={{ backgroundColor: this.highlightBackgroundColour, border: this.highlightTextColour, color: this.highlightTextColour }} onClick={this.onSave.bind(this)} >{this.text['button_start']}</button>\n                : null}\n              {disabled ?\n                <button type=\"button\" class={`start-btn basic-btn ml10 pale`} disabled >{this.text['button_start']}</button>\n                : null}\n            </div>\n          </div>\n        </form>\n        <div class=\"powered-by\">\n          <a href=\"https://evolvedmedia.co.uk\" target=\"_blank\" rel=\"noreferrer\" alt=\"Visit the Evolved Media website\">{this.text['powered_by']} EVOLVED MEDIA</a>\n        </div>\n      </div >\n    );\n  }\n}\n\nAssetsSelected.propTypes = {\n  assetCount: PropTypes.number,\n  folderCount: PropTypes.number,\n  onSave: PropTypes.func,\n  toFolderDeleteScreen: PropTypes.func\n};\n\nexport default AssetsSelected;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass AssetsSelected extends Component {\n  constructor(props) {\n    super(props)\n\n    this.text = window.elvisContext.plugin.messages\n    this.highlightBackgroundColour = window.elvisContext.plugin.configProperties.highlight_background_colour.value\n    this.highlightTextColour = window.elvisContext.plugin.configProperties.highlight_text_colour.value\n\n    this.state = {\n      deleteType: null\n    }\n  }\n\n  onCancel() {\n    window.elvisContext.close()\n  }\n\n  onRadioSelectChange(e) {\n    this.setState({ deleteType: e.target.value })\n  }\n\n  toAssets() {\n    this.props.toAssetDeleteScreen()\n  }\n\n  onSave() {\n    this.props.onSave({ folderDeleteType: this.state.deleteType })\n  }\n\n  gotoRecovery() {\n    window.open(`${window.location.protocol}//${window.location.host}/app/#${window.elvisContext.plugin.configProperties.trashcan_plugin_url.value}`)\n  }\n\n  render() {\n    const {\n      deleteType\n    } = this.state\n\n    let disabled = !deleteType\n\n    return (\n      <div class=\"state-block state-folders\">\n        <form class=\"delete-form\">\n          <div class=\"delete-panel\">\n            <div class=\"delete-main\">\n              <h3>{this.text['folder_header']}</h3>\n              <input className='pointer' type=\"radio\" id=\"confirm-this-folder\" name=\"delete-folders\" value=\"thisfolder\" onChange={this.onRadioSelectChange.bind(this)} />\n              <label className='pointer' for=\"confirm-this-folder\">{this.text['folder_message1']}</label><br />\n              <input className='pointer' type=\"radio\" id=\"confirm-subfolders\" name=\"delete-folders\" value=\"subfolders\" onChange={this.onRadioSelectChange.bind(this)} />\n              <label className='pointer' for=\"confirm-subfolders\">{this.text['folder_message2']}</label><br />\n              <div id=\"info\" class=\"delete-info\">{this.text['folder_message3']}<br />{this.text['folder_message4']}</div>\n            </div>\n            <div class=\"delete-advanced\">\n              {this.props.assetCount > 0 ?\n                <div class=\"advanced-link\" onClick={this.toAssets.bind(this)}>\n                  {this.text['folder_message5']}\n                </div>\n                : null}\n              <div class=\"advanced-link\" onClick={this.gotoRecovery.bind(this)}>\n                {this.text['recovery_message']}\n              </div>\n            </div>\n            <div class=\"delete-buttons\">\n              <button type=\"button\" class=\"cancel-btn basic-btn ml10 pale\" onClick={this.onCancel}>{this.text['button_cancel']}</button>\n              {!disabled ?\n                <button type=\"button\" class={`start-btn basic-btn ml10`} style={{ backgroundColor: this.highlightBackgroundColour, border: this.highlightTextColour, color: this.highlightTextColour }} onClick={this.onSave.bind(this)} >{this.text['button_start']}</button>\n                : null}\n              {disabled ?\n                <button type=\"button\" class={`start-btn basic-btn ml10 pale`} disabled >{this.text['button_start']}</button>\n                : null}\n            </div>\n          </div>\n        </form>\n        <div class=\"powered-by\">\n          <a href=\"https://evolvedmedia.co.uk\" target=\"_blank\" rel=\"noreferrer\" alt=\"Visit the Evolved Media website\">{this.text['powered_by']} EVOLVED MEDIA</a>\n        </div>\n      </div>\n    );\n  }\n}\n\nAssetsSelected.propTypes = {\n  assetCount: PropTypes.number,\n  folderCount: PropTypes.number,\n  onSave: PropTypes.func,\n  toAssetDeleteScreen: PropTypes.func\n};\n\nexport default AssetsSelected;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Process extends Component {\n  constructor(props) {\n    super(props)\n\n    this.text = window.elvisContext.plugin.messages\n\n    this.state = {\n\n    }\n  }\n\n  componentDidMount() {\n\n  }\n\n  onCancel() {\n    window.elvisContext.close()\n  }\n\n  render() {\n    return (\n      <div class=\"state-block state-running\">\n        <form class=\"delete-form\">\n          <div class=\"delete-panel\">\n            <div class=\"delete-main\">\n              <h3>{this.text['progress_header']}</h3>\n              <div id=\"info\" class=\"delete-info warning\">{this.text['progress_message1']}<br />{this.text['progress_message2']}<br /><br />{this.text['progress_message3']}</div>\n            </div>\n            <div class=\"delete-buttons\">\n              <button type=\"button\" class=\"cancel-btn basic-btn ml10 pale\" onClick={this.onCancel}>{this.text['button_close']}</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nProcess.propTypes = {\n\n};\n\nexport default Process;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Process extends Component {\n  constructor(props) {\n    super(props)\n    this.text = window.elvisContext.plugin.messages\n\n  }\n\n  componentDidMount() {\n\n  }\n\n  onCancel() {\n    window.elvisContext.close()\n  }\n\n  render() {\n    return (\n      <div class=\"state-block state-error\">\n        <form class=\"delete-form\">\n          <div class=\"delete-panel\">\n            <div class=\"delete-main\">\n              <h3>{this.text['error_title']}</h3>\n              {this.props.error === 0 ?\n                <div id=\"info\" class=\"delete-info error\">{this.text['error_message1']}</div>\n                : null}\n              {this.props.error === 1 ?\n                <div id=\"info\" class=\"delete-info error\">{this.text['error_message2']}</div>\n                : null}\n              {this.props.error === 2 ?\n                <div id=\"info\" class=\"delete-info error\">{this.text['error_message3']}</div>\n                : null}\n              {this.props.error === 3 ?\n                <div id=\"info\" class=\"delete-info error\">{this.text['error_message4']}</div>\n                : null}\n                 {this.props.error === 4 ?\n                <div id=\"info\" class=\"delete-info error\">{this.text['error_message5']}</div>\n                : null}\n                   {this.props.error === 5 ?\n                <div id=\"info\" class=\"delete-info error\">{this.text['error_message6']}</div>\n                : null}\n            </div>\n            <div class=\"delete-buttons\">\n              <button type=\"button\" class=\"cancel-btn basic-btn ml10 pale\" onClick={this.onCancel} >{this.text['button_close']}</button>\n            </div>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nProcess.propTypes = {\n  error: PropTypes.number\n};\n\nexport default Process;","export default __webpack_public_path__ + \"static/media/spinner.fcb475bb.svg\";","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Spinner from '../../Images/spinner.svg'\n\nclass Process extends Component {\n  constructor(props) {\n    super(props)\n    this.text = window.elvisContext.plugin.messages\n\n  }\n\n  componentDidMount() {\n\n  }\n\n  onCancel() {\n    window.elvisContext.close()\n  }\n\n  render() {\n    return (\n      <div style={{ height: '100%' }}>\n        <div className=\"center\" >\n          <img alt=\"Working...\" src={Spinner} />\n        </div>\n      </div>\n    );\n  }\n}\n\nProcess.propTypes = {\n  error: PropTypes.number\n};\n\nexport default Process;","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport ElvisDriver from './Helpers/elvis'\n//import reportWebVitals from './reportWebVitals';\n\n// eslint-disable-next-line no-restricted-globals\nwindow.elvisContext = window.elvisContext || parent.elvisContext || parent.getElvisContext(window) || {}\n\nElvisDriver\n  .init(window.elvisContext.plugin.configProperties.api.value)\n  .then(ReactDOM.render.bind(this,\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>,\n    document.getElementById('root')), err => alert(err))\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n","import Elvis from 'elvis-driver/browser';\r\nimport Axios from 'axios'\r\nconst crypto = require('crypto');\r\nlet pluginSettings = window.pluginSettings\r\n\r\n\r\n\r\nexport default {\r\n  serverUrl: '',\r\n\r\n  resolvedLogin: null,\r\n\r\n  _getFolderPath() {\r\n    return (\r\n      window.elvisContext && window.elvisContext.activeTab.folderSelection.length ?\r\n        window.elvisContext.activeTab.folderSelection[0].assetPath :\r\n        '/'\r\n    )\r\n  },\r\n\r\n  _retrieveToken() {\r\n    return (\r\n      fetch('/services/csrf', {\r\n        credentials: 'include'\r\n      }).then(response => (\r\n        response.json()\r\n      ))\r\n    )\r\n  },\r\n\r\n  init(apiServerUrl) {\r\n    this.apiServerUrl = apiServerUrl\r\n    return this\r\n      ._retrieveToken()\r\n      .then(response => {\r\n        const csrfToken = response.csrfToken\r\n        this.csrfToken = csrfToken\r\n        // Axios.defaults.headers.common['X-CSRF-TOKEN'] = csrfToken\r\n        const loginParam = csrfToken ? { csrfToken } : { withCookie: true }\r\n        this.folderPath = this._getFolderPath()\r\n        this.client = Elvis.createClient(this.serverUrl)\r\n        this.resolvedLogin = this.client.login(loginParam)\r\n        return this.resolvedLogin\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  },\r\n\r\n  waitForLogin(func) {\r\n    return new Promise((resolve) => {\r\n      this.resolvedLogin.then(() => {\r\n        resolve(func());\r\n      });\r\n    });\r\n  },\r\n\r\n  search(query) {\r\n    return (\r\n      this.client\r\n        .search(query)\r\n    )\r\n  },\r\n\r\n\r\n  sendInfo2(data) {\r\n    const request = new Request(`${this.apiServerUrl}/api/movetotrash`, {\r\n      method: 'POST',\r\n      body: JSON.stringify(data),\r\n      headers: new Headers(this.getHeadersWithDefaults())\r\n    })\r\n\r\n    return fetch(request);\r\n  },\r\n\r\n  sendInfo(data) {\r\n    // let params = {\r\n    //   path: path,\r\n    //   token: Settings.apiToken\r\n    // }\r\n    // path.token = Settings.apiToken\r\n    let headerEncrypted = {\r\n      server_url: pluginSettings.server_url,\r\n      username: pluginSettings.username,\r\n      password: pluginSettings.password,\r\n    }\r\n\r\n    let detailsEncrypted = this.encode(JSON.stringify(headerEncrypted),  window.elvisContext.plugin.configProperties.key.value)\r\n\r\n\r\n    const config = {\r\n      headers: {\r\n        'X-CSRF-TOKEN': this.csrfToken,\r\n        'Content-Type': 'application/json',\r\n        'X-Api-Key': pluginSettings.api_key,\r\n        'trashpath': pluginSettings.trashpath,\r\n        'iv': detailsEncrypted.iv,\r\n        'details': detailsEncrypted.content,\r\n      }\r\n    }\r\n    return Axios.post(`${this.apiServerUrl}/movetotrash`, JSON.stringify(data), config)\r\n  },\r\n  encode(text, secretKey) {\r\n    const iv = crypto.randomBytes(16)\r\n    const algorithm = 'aes-256-ctr'\r\n    const cipher = crypto.createCipheriv(algorithm, secretKey, iv)\r\n    const encrypted = Buffer.concat([cipher.update(text), cipher.final()])\r\n    return {\r\n      iv: iv.toString('hex'),\r\n      content: encrypted.toString('hex')\r\n    };\r\n  },\r\n\r\n\r\n  update(id, metadata) {\r\n    return (\r\n      this.client\r\n        .update(id, metadata)\r\n    )\r\n  },\r\n\r\n  // remove(query) {\r\n  //   return (\r\n  //     this.client\r\n  //       .remove(query)\r\n  //   )\r\n  // },\r\n\r\n  // getConfig(settings) {\r\n  //   let serverUrl = settings.serverUrl\r\n  //   return new Promise((resolve, reject) => {\r\n  //     Axios.get(`${serverUrl}/file${escape(settings.assetPath)}`)\r\n  //       .then(res => {\r\n  //         if (res.status === 200) {\r\n  //           resolve(res.data)\r\n  //         } else {\r\n  //           reject(res)\r\n  //         }\r\n  //       })\r\n  //       .catch(err => {\r\n  //         reject(err)\r\n  //       })\r\n\r\n  //   })\r\n  // },\r\n\r\n  // getFieldInfo(data) {\r\n  //   const request = new Request(`/services/fieldinfo`, {\r\n  //     method: 'GET',\r\n  //     body: JSON.stringify(data),\r\n  //     headers: new Headers(this.getHeadersWithDefaults())\r\n  //   })\r\n\r\n  //   return fetch(request);\r\n  // },\r\n\r\n  // getMessageInfo(data) {\r\n  //   const request = new Request(`/services/messages`, {\r\n  //     method: 'GET',\r\n  //     body: JSON.stringify(data),\r\n  //     headers: new Headers(this.getHeadersWithDefaults())\r\n  //   })\r\n  //   return fetch(request);\r\n  // }\r\n}\r\n"],"sourceRoot":""}